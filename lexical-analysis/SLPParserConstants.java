/* Generated By:JavaCC: Do not edit this line. SLPParserConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface SLPParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int COMMA = 10;
  /** RegularExpression Id. */
  int SEMIC = 11;
  /** RegularExpression Id. */
  int COLON = 12;
  /** RegularExpression Id. */
  int ASSIGN = 13;
  /** RegularExpression Id. */
  int LBR = 14;
  /** RegularExpression Id. */
  int RBR = 15;
  /** RegularExpression Id. */
  int PLUS_SIGN = 16;
  /** RegularExpression Id. */
  int MINUS_SIGN = 17;
  /** RegularExpression Id. */
  int NOT = 18;
  /** RegularExpression Id. */
  int OR_OP = 19;
  /** RegularExpression Id. */
  int AND_OP = 20;
  /** RegularExpression Id. */
  int BOOL_EQ = 21;
  /** RegularExpression Id. */
  int NOT_EQ = 22;
  /** RegularExpression Id. */
  int LT = 23;
  /** RegularExpression Id. */
  int LT_EQ = 24;
  /** RegularExpression Id. */
  int GT = 25;
  /** RegularExpression Id. */
  int GT_EQ = 26;
  /** RegularExpression Id. */
  int IF = 27;
  /** RegularExpression Id. */
  int VAR = 28;
  /** RegularExpression Id. */
  int CONST = 29;
  /** RegularExpression Id. */
  int RETURN = 30;
  /** RegularExpression Id. */
  int WHILE = 31;
  /** RegularExpression Id. */
  int ELSE = 32;
  /** RegularExpression Id. */
  int TRUE = 33;
  /** RegularExpression Id. */
  int FALSE = 34;
  /** RegularExpression Id. */
  int IS = 35;
  /** RegularExpression Id. */
  int BOOLEAN = 36;
  /** RegularExpression Id. */
  int INTEGER = 37;
  /** RegularExpression Id. */
  int VOID = 38;
  /** RegularExpression Id. */
  int MAIN = 39;
  /** RegularExpression Id. */
  int BEGIN = 40;
  /** RegularExpression Id. */
  int END = 41;
  /** RegularExpression Id. */
  int SKIP_TOKEN = 42;
  /** RegularExpression Id. */
  int NUM = 43;
  /** RegularExpression Id. */
  int DIGIT = 44;
  /** RegularExpression Id. */
  int SIGNED = 45;
  /** RegularExpression Id. */
  int ID = 46;
  /** RegularExpression Id. */
  int LETTER = 47;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_COMMENT = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "\"/*\"",
    "\"/*\"",
    "\"*/\"",
    "<token of kind 9>",
    "\",\"",
    "\";\"",
    "\":\"",
    "\"=\"",
    "\"(\"",
    "\")\"",
    "\"+\"",
    "\"-\"",
    "\"~\"",
    "\"||\"",
    "\"&&\"",
    "\"==\"",
    "\"!=\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"if\"",
    "\"var\"",
    "\"const\"",
    "\"return\"",
    "\"while\"",
    "\"else\"",
    "\"true\"",
    "\"false\"",
    "\"is\"",
    "\"boolean\"",
    "\"integer\"",
    "\"void\"",
    "\"main\"",
    "\"begin\"",
    "\"end\"",
    "\"skip\"",
    "<NUM>",
    "<DIGIT>",
    "<SIGNED>",
    "<ID>",
    "<LETTER>",
  };

}
